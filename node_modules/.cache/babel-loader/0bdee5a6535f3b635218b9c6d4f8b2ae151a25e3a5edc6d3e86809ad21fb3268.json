{"ast":null,"code":"import { authAPI } from \"../services/getUsers\";\n// import { authAPI } from \"services/getUsers\";\nimport { stopSubmit } from \"redux-form\";\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_USER_DATA:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const setAuthUserData = (userId, login, email, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: {\n    userId,\n    login,\n    email,\n    isAuth\n  }\n});\nexport const getAuthUserData = () => async dispatch => {\n  let response = await authAPI.me();\n  if (response.data.resultCode === 0) {\n    let {\n      userId,\n      login,\n      email\n    } = response.data.data;\n    dispatch(setAuthUserData(userId, login, email, true));\n  }\n};\nexport const login = (email, password, rememberMe) => async dispatch => {\n  let response = await authAPI.login(email, password, rememberMe);\n  if (response.data.resultCode === 0) {\n    dispatch(getAuthUserData());\n  } else {\n    let messageError = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n    dispatch(stopSubmit(\"login\", {\n      _error: messageError\n    }));\n  }\n};\nexport const logout = () => async dispatch => {\n  let response = await authAPI.logout();\n  if (response.data.resultCode === 0) {\n    dispatch(setAuthUserData(null, null, null, false));\n  }\n};\nexport default authReducer;","map":{"version":3,"names":["authAPI","stopSubmit","SET_USER_DATA","initialState","userId","email","login","isAuth","authReducer","state","arguments","length","undefined","action","type","payload","setAuthUserData","getAuthUserData","dispatch","response","me","data","resultCode","password","rememberMe","messageError","messages","_error","logout"],"sources":["/home/mr/www/melnyk85developer.github.io/test-himars/src/store/authReducer.js"],"sourcesContent":["import { authAPI } from \"../services/getUsers\";\n// import { authAPI } from \"services/getUsers\";\nimport { stopSubmit } from \"redux-form\";\n\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n}\nconst authReducer = (state = initialState, action) => {\n    switch(action.type){\n        case SET_USER_DATA:\n            return { \n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport const setAuthUserData = (userId, login, email, isAuth) => ({type: SET_USER_DATA, payload: \n    {userId, login, email, isAuth} })\n\nexport const getAuthUserData = () => async (dispatch) => {\n\n    let response = await authAPI.me();\n    if (response.data.resultCode === 0) {\n        let { userId, login, email } = response.data.data;\n        dispatch(setAuthUserData(userId, login, email, true));\n    }\n}\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n\n    let response = await authAPI.login(email, password, rememberMe);\n\n    if(response.data.resultCode === 0){\n        dispatch(getAuthUserData())\n    } else {\n        let messageError = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n        dispatch(stopSubmit(\"login\", {_error: messageError}));\n    }\n}\nexport const logout = () => async (dispatch) => {\n\n    let response = await authAPI.logout()\n\n    if(response.data.resultCode === 0){\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n}\nexport default authReducer;"],"mappings":"AAAA,SAASA,OAAO,QAAQ,sBAAsB;AAC9C;AACA,SAASC,UAAU,QAAQ,YAAY;AAEvC,MAAMC,aAAa,GAAG,oBAAoB;AAE1C,IAAIC,YAAY,GAAG;EACfC,MAAM,EAAE,IAAI;EACZC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE;AACZ,CAAC;AACD,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,YAAY;EAAA,IAAEU,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC7C,QAAOC,MAAM,CAACC,IAAI;IACd,KAAKZ,aAAa;MACd,OAAO;QACH,GAAGO,KAAK;QACR,GAAGI,MAAM,CAACE;MACd,CAAC;IACL;MACI,OAAON,KAAK;EACpB;AACJ,CAAC;AAED,OAAO,MAAMO,eAAe,GAAGA,CAACZ,MAAM,EAAEE,KAAK,EAAED,KAAK,EAAEE,MAAM,MAAM;EAACO,IAAI,EAAEZ,aAAa;EAAEa,OAAO,EAC3F;IAACX,MAAM;IAAEE,KAAK;IAAED,KAAK;IAAEE;EAAM;AAAE,CAAC,CAAC;AAErC,OAAO,MAAMU,eAAe,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAErD,IAAIC,QAAQ,GAAG,MAAMnB,OAAO,CAACoB,EAAE,CAAC,CAAC;EACjC,IAAID,QAAQ,CAACE,IAAI,CAACC,UAAU,KAAK,CAAC,EAAE;IAChC,IAAI;MAAElB,MAAM;MAAEE,KAAK;MAAED;IAAM,CAAC,GAAGc,QAAQ,CAACE,IAAI,CAACA,IAAI;IACjDH,QAAQ,CAACF,eAAe,CAACZ,MAAM,EAAEE,KAAK,EAAED,KAAK,EAAE,IAAI,CAAC,CAAC;EACzD;AACJ,CAAC;AACD,OAAO,MAAMC,KAAK,GAAGA,CAACD,KAAK,EAAEkB,QAAQ,EAAEC,UAAU,KAAK,MAAON,QAAQ,IAAK;EAEtE,IAAIC,QAAQ,GAAG,MAAMnB,OAAO,CAACM,KAAK,CAACD,KAAK,EAAEkB,QAAQ,EAAEC,UAAU,CAAC;EAE/D,IAAGL,QAAQ,CAACE,IAAI,CAACC,UAAU,KAAK,CAAC,EAAC;IAC9BJ,QAAQ,CAACD,eAAe,CAAC,CAAC,CAAC;EAC/B,CAAC,MAAM;IACH,IAAIQ,YAAY,GAAGN,QAAQ,CAACE,IAAI,CAACK,QAAQ,CAACf,MAAM,GAAG,CAAC,GAAGQ,QAAQ,CAACE,IAAI,CAACK,QAAQ,CAAC,CAAC,CAAC,GAAG,YAAY;IAC/FR,QAAQ,CAACjB,UAAU,CAAC,OAAO,EAAE;MAAC0B,MAAM,EAAEF;IAAY,CAAC,CAAC,CAAC;EACzD;AACJ,CAAC;AACD,OAAO,MAAMG,MAAM,GAAGA,CAAA,KAAM,MAAOV,QAAQ,IAAK;EAE5C,IAAIC,QAAQ,GAAG,MAAMnB,OAAO,CAAC4B,MAAM,CAAC,CAAC;EAErC,IAAGT,QAAQ,CAACE,IAAI,CAACC,UAAU,KAAK,CAAC,EAAC;IAC9BJ,QAAQ,CAACF,eAAe,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;EACtD;AACJ,CAAC;AACD,eAAeR,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}