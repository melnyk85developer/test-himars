{"ast":null,"code":"var _jsxFileName = \"/home/mr/www/melnyk85developer.github.io/test-himars/src/pages/Profile/MyPosts/index.js\";\nimport React from \"react\";\nimport Post from \"./Post\";\nimport { Textarea } from \"../../../components/FormsControls/FormsControls\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { required, maxLengthCreator } from \"../../../utils/validators/validators\";\nimport \"./styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxLength3000 = maxLengthCreator(3000);\nconst MyPosts = /*#__PURE__*/React.memo(_c = props => {\n  let posts = [...props.posts].reverse().map(post => /*#__PURE__*/_jsxDEV(Post, {\n    id: post.id,\n    post: post.post,\n    like: post.like,\n    dislike: post.dislike\n  }, post.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 57\n  }, this));\n  let onAddPost = values => {\n    props.addPost(values.newPostText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddNewPostFormRedux, {\n      onSubmit: onAddPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"borderPosts\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"posts\",\n        children: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n});\n_c2 = MyPosts;\nconst AddNewPostForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    className: \"wrapMyPost\",\n    children: [/*#__PURE__*/_jsxDEV(Field, {\n      validate: [required, maxLength3000],\n      name: \"newPostText\",\n      component: Textarea,\n      placeholder: \"\\u0427\\u0442\\u043E \\u0443 \\u0412\\u0430\\u0441 \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E?\",\n      className: \"inputPostProfile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttonMyPost\",\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_c3 = AddNewPostForm;\nconst AddNewPostFormRedux = reduxForm({\n  form: \"ProfileAddNewPostForm\"\n})(AddNewPostForm);\n_c4 = AddNewPostFormRedux;\nexport default MyPosts;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"MyPosts$React.memo\");\n$RefreshReg$(_c2, \"MyPosts\");\n$RefreshReg$(_c3, \"AddNewPostForm\");\n$RefreshReg$(_c4, \"AddNewPostFormRedux\");","map":{"version":3,"names":["React","Post","Textarea","Field","reduxForm","required","maxLengthCreator","jsxDEV","_jsxDEV","maxLength3000","MyPosts","memo","_c","props","posts","reverse","map","post","id","like","dislike","fileName","_jsxFileName","lineNumber","columnNumber","onAddPost","values","addPost","newPostText","children","AddNewPostFormRedux","onSubmit","className","_c2","AddNewPostForm","handleSubmit","validate","name","component","placeholder","_c3","form","_c4","$RefreshReg$"],"sources":["/home/mr/www/melnyk85developer.github.io/test-himars/src/pages/Profile/MyPosts/index.js"],"sourcesContent":["import React from \"react\";\nimport Post from \"./Post\";\nimport { Textarea } from \"../../../components/FormsControls/FormsControls\";\nimport {Field, reduxForm } from \"redux-form\";\nimport { required, maxLengthCreator } from \"../../../utils/validators/validators\";\nimport \"./styles.scss\";\n\nconst maxLength3000 = maxLengthCreator(3000);\n\nconst MyPosts = React.memo(props => {\n\n    let posts = [...props.posts].reverse().map( post => <Post\n        key={post.id}\n        id={post.id} \n        post={post.post} \n        like={post.like} \n        dislike={post.dislike}\n    />)\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);\n    }\n\n    return (\n        <div>\n            <AddNewPostFormRedux onSubmit={onAddPost} />\n            <div className=\"borderPosts\">\n                <div className=\"posts\">{posts}</div>\n            </div>\n        </div>\n    )\n})\nconst AddNewPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className=\"wrapMyPost\">\n            <Field  validate={[required, maxLength3000]} name=\"newPostText\" component={Textarea} placeholder=\"Что у Вас нового?\" className=\"inputPostProfile\"/>\n\n            <button className=\"buttonMyPost\">Add Post</button>\n        </form>\n    )\n}\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\n\nexport default MyPosts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}