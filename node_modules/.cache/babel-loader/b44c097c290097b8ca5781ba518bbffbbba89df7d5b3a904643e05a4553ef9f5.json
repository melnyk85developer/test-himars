{"ast":null,"code":"var _jsxFileName = \"/home/mr/www/melnyk85developer.github.io/test-himars/src/components/Paginator/Paginator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Paginator = _ref => {\n  _s();\n  let {\n    totalItemsCount,\n    pageSize,\n    currentPage,\n    onPageChanged,\n    users,\n    portionSize = 10\n  } = _ref;\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [portionNumber > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber - 1);\n      },\n      children: \"PREV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: currentPage === p ? \"active\" : '',\n        onClick: e => {\n          onPageChanged(p);\n        },\n        children: p\n      }, p, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 24\n      }, this);\n    }), portionCount > portionNumber && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber + 1);\n      },\n      children: \"NEXT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(Paginator, \"8p8zb1vvZvsuWyQQS16DuuzsJLU=\");\n_c = Paginator;\nexport default Paginator;\nvar _c;\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Paginator","_ref","_s","totalItemsCount","pageSize","currentPage","onPageChanged","users","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","filter","p","map","className","e","_c","$RefreshReg$"],"sources":["/home/mr/www/melnyk85developer.github.io/test-himars/src/components/Paginator/Paginator.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, users, portionSize = 10}) => {\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n\n    for(let i = 1; i <= pagesCount; i++){\n        pages.push(i);\n    }\n    \n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n    return (\n        <div>\n            { portionNumber > 1 &&\n            <button onClick={ () => { setPortionNumber(portionNumber - 1 )}}>PREV</button> }\n\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map( (p) => {\n                return <span className={ currentPage === p ? \"active\" : '' } key={p} onClick={ (e) => { onPageChanged(p) }}>{p}</span>\n            })}\n            { portionCount > portionNumber && \n                <button onClick={ () => { setPortionNumber(portionNumber + 1) } }>NEXT</button> }\n        </div>\n    )\n}\nexport default Paginator;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGC,IAAA,IAAsF;EAAAC,EAAA;EAAA,IAArF;IAACC,eAAe;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,aAAa;IAAEC,KAAK;IAAEC,WAAW,GAAG;EAAE,CAAC,GAAAP,IAAA;EAC/F,IAAIQ,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACR,eAAe,GAAGC,QAAQ,CAAC;EAEtD,IAAIQ,KAAK,GAAG,EAAE;EAEd,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIJ,UAAU,EAAEI,CAAC,EAAE,EAAC;IAChCD,KAAK,CAACE,IAAI,CAACD,CAAC,CAAC;EACjB;EAEA,IAAIE,YAAY,GAAGL,IAAI,CAACC,IAAI,CAACF,UAAU,GAAGD,WAAW,CAAC;EACtD,IAAI,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACnD,IAAIqB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAC,IAAIR,WAAW,GAAG,CAAC;EACjE,IAAIW,sBAAsB,GAAGH,aAAa,GAAGR,WAAW;EAExD,oBACIT,OAAA;IAAAqB,QAAA,GACMJ,aAAa,GAAG,CAAC,iBACnBjB,OAAA;MAAQsB,OAAO,EAAGA,CAAA,KAAM;QAAEJ,gBAAgB,CAACD,aAAa,GAAG,CAAE,CAAC;MAAA,CAAE;MAAAI,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE7Eb,KAAK,CACDc,MAAM,CAACC,CAAC,IAAIA,CAAC,IAAIT,qBAAqB,IAAIS,CAAC,IAAIR,sBAAsB,CAAC,CACtES,GAAG,CAAGD,CAAC,IAAK;MACb,oBAAO5B,OAAA;QAAM8B,SAAS,EAAGxB,WAAW,KAAKsB,CAAC,GAAG,QAAQ,GAAG,EAAI;QAASN,OAAO,EAAIS,CAAC,IAAK;UAAExB,aAAa,CAACqB,CAAC,CAAC;QAAC,CAAE;QAAAP,QAAA,EAAEO;MAAC,GAA5CA,CAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkD,CAAC;IAC1H,CAAC,CAAC,EACAV,YAAY,GAAGC,aAAa,iBAC1BjB,OAAA;MAAQsB,OAAO,EAAGA,CAAA,KAAM;QAAEJ,gBAAgB,CAACD,aAAa,GAAG,CAAC,CAAC;MAAC,CAAG;MAAAI,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClF,CAAC;AAEd,CAAC;AAAAvB,EAAA,CA5BKF,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AA6Bf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}