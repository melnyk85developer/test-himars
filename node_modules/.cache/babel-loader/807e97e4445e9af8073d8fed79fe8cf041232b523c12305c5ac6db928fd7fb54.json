{"ast":null,"code":"import { usersAPI } from \"services/getUsers\";\nimport { updateObjectInArray } from \"utils/objectHelpers\";\nconst FOLLOW = 'users/FOLLOW';\nconst UNFOLLOW = 'users/UNFOLLOW';\nconst SET_USERS = 'users/SET_USERS';\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FETCHING_PROGRESS = 'users/TOGGLE_IS_FETCHING_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 100,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: []\n};\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\n          followed: true\n        })\n      };\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\n          followed: false\n        })\n      };\n    case SET_USERS:\n      return {\n        ...state,\n        users: action.users\n      };\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.currentPage\n      };\n    case SET_TOTAL_USERS_COUNT:\n      return {\n        ...state,\n        totalUsersCount: action.count\n      };\n    case TOGGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching\n      };\n    case TOGGLE_IS_FETCHING_PROGRESS:\n      return {\n        ...state,\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id !== action.userId)\n      };\n    default:\n      return state;\n  }\n};\nexport const followSuccess = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowSuccess = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setUsersTotalCount = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count: totalUsersCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FETCHING_PROGRESS,\n  isFetching,\n  userId\n});\nexport const requestUsers = (page, pageSize) => {\n  return async dispatch => {\n    dispatch(toggleIsFetching(true));\n    dispatch(setCurrentPage(page));\n    const data = await usersAPI.getUsers(page, pageSize);\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(data.items));\n    dispatch(setUsersTotalCount(data.totalCount));\n  };\n};\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n  dispatch(toggleFollowingProgress(true, userId));\n  const response = await apiMethod(userId);\n  if (response.data.resultCode === 0) {\n    dispatch(actionCreator(userId));\n  }\n  dispatch(toggleFollowingProgress(false, userId));\n};\nexport const follow = userId => {\n  return async dispatch => {\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n  };\n};\nexport const unfollow = userId => {\n  return async dispatch => {\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n  };\n};\nexport default usersReducer;","map":{"version":3,"names":["usersAPI","updateObjectInArray","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FETCHING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","arguments","length","undefined","action","type","userId","followed","count","filter","id","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setUsersTotalCount","toggleIsFetching","toggleFollowingProgress","requestUsers","page","dispatch","data","getUsers","items","totalCount","followUnfollowFlow","apiMethod","actionCreator","response","resultCode","follow","bind","unfollow"],"sources":["/home/mr/www/melnyk85developer.github.io/test-himars/src/store/usersReducer.js"],"sourcesContent":["import { usersAPI } from \"services/getUsers\";\nimport { updateObjectInArray } from \"utils/objectHelpers\";\n\nconst FOLLOW = 'users/FOLLOW';\nconst UNFOLLOW = 'users/UNFOLLOW';\nconst SET_USERS = 'users/SET_USERS';\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FETCHING_PROGRESS = 'users/TOGGLE_IS_FETCHING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 100,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n}\nconst usersReducer = (state = initialState, action) => {\n    switch(action.type){\n        case FOLLOW:\n            return { \n                ...state, \n                users: updateObjectInArray(state.users, action.userId, \"id\",  {followed: true} )\n            }\n        case UNFOLLOW:\n            return { \n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\",  {followed: false} )\n            }\n        case SET_USERS: \n            return { ...state, users: action.users }\n        case SET_CURRENT_PAGE: \n            return { ...state, currentPage: action.currentPage }\n        case SET_TOTAL_USERS_COUNT: \n            return { ...state, totalUsersCount: action.count }\n        case TOGGLE_IS_FETCHING: \n            return { ...state, isFetching: action.isFetching }\n        case TOGGLE_IS_FETCHING_PROGRESS: \n            return { ...state, \n                followingInProgress: action.isFetching \n                ? [...state.followingInProgress, action.userId]\n                : state.followingInProgress.filter(id => id !== action.userId)\n            }\n        default:\n            return state;\n    }\n}\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\nexport const setUsers = (users) => ({ type: SET_USERS, users })\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\nexport const setUsersTotalCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FETCHING_PROGRESS, isFetching, userId })\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n        const data = await usersAPI.getUsers(page, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setUsersTotalCount(data.totalCount));\n    }\n}\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    const response = await apiMethod(userId);\n    if(response.data.resultCode === 0){\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n}\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n    }\n}\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n    }\n}\nexport default usersReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}